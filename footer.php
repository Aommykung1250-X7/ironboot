<footer>
        <div class="container">
            <p>&copy; 2025 IRONBOOTS. All rights reserved.</p>
        </div>
</footer>

<script>
document.addEventListener('DOMContentLoaded', function() {
    
    const cartToggleBtn = document.getElementById('cart-toggle-btn');
    const cartCloseBtn = document.getElementById('cart-close-btn');
    const sideCart = document.getElementById('side-cart');
    const cartOverlay = document.getElementById('cart-overlay');
    const cartBody = document.getElementById('side-cart-body');
    const cartCountEl = document.getElementById('cart-count');
    const cartTotalPriceEl = document.getElementById('cart-total-price');
    const addToCartForm = document.getElementById('add-to-cart-form');
    
    // ===== 1. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ =====
    function toggleCart(show = true) {
        if (show) {
            sideCart.classList.add('active');
            cartOverlay.classList.add('active');
        } else {
            sideCart.classList.remove('active');
            cartOverlay.classList.remove('active');
        }
    }

    // ===== 2. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ (AJAX Get) =====
    async function fetchCart() {
        try {
            const response = await fetch('cart_action.php?action=get');
            const data = await response.json();
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
            cartBody.innerHTML = data.html;
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏ô Header
            cartCountEl.innerText = data.count;
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
            cartTotalPriceEl.innerText = data.total_price + ' ‡∏ø';
            
        } catch (error) {
            console.error('Error fetching cart:', error);
            cartBody.innerHTML = "<p>Error loading cart.</p>";
        }
    }

    // ===== 3. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô/‡∏•‡∏ö (AJAX Update) =====
    async function updateCartItem(cartKey, quantity) { // 1. ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô cartKey
        const formData = new FormData();
        formData.append('cart_key', cartKey); // 2. ‡∏™‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô cart_key
        formData.append('quantity', quantity);

        try {
            await fetch('cart_action.php?action=update', {
                method: 'POST',
                body: formData
            });
            await fetchCart(); 
        } catch (error) {
            console.error('Error updating cart:', error);
        }
    }

    // ===== 4. ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å (Event Listeners) =====
    
    // 4.1 ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ (‡πÉ‡∏ô Header)
    cartToggleBtn.addEventListener('click', function(e) {
        e.preventDefault();
        toggleCart(true); // ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
    });

    // 4.2 ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î 'X' ‡∏´‡∏£‡∏∑‡∏≠ ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏°‡∏∑‡∏î
    cartCloseBtn.addEventListener('click', () => toggleCart(false));
    cartOverlay.addEventListener('click', () => toggleCart(false));

    // 4.3 (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç) ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤" (‡πÉ‡∏ô product_detail.php)
    if (addToCartForm) {
        addToCartForm.addEventListener('submit', async function(e) {
            e.preventDefault(); // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£ submit ‡∏õ‡∏Å‡∏ï‡∏¥
            
            const formData = new FormData(addToCartForm);
            const feedbackEl = document.getElementById('add-to-cart-feedback');

            try {
                const response = await fetch('cart_action.php?action=add', {
                    method: 'POST',
                    body: formData
                });
                const data = await response.json();

                if (data.status === 'success') {
                    feedbackEl.innerText = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß!';
                    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
                    await fetchCart();
                    // ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏î‡∏π
                    toggleCart(true); 
                    
                    // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° feedback
                    setTimeout(() => { feedbackEl.innerText = ''; }, 2000);
                }
            } catch (error) {
                console.error('Error adding to cart:', error);
                feedbackEl.innerText = 'Error!';
            }
        });
    }

    // 4.4 (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç) ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏•‡∏ö‡∏Ç‡∏≠‡∏á "‡πÉ‡∏ô" ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
    cartBody.addEventListener('click', function(e) {
        if (e.target.classList.contains('cart-remove-btn')) {
            const cartKey = e.target.dataset.key; // 3. ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å .dataset.id ‡πÄ‡∏õ‡πá‡∏ô .dataset.key
            updateCartItem(cartKey, 0); // ‡∏™‡πà‡∏á 0 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö
        }
    });

    cartBody.addEventListener('change', function(e) {
        if (e.target.classList.contains('cart-qty-input')) {
            const cartKey = e.target.dataset.key; // 4. ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å .dataset.id ‡πÄ‡∏õ‡πá‡∏ô .dataset.key
            const quantity = e.target.value;
            updateCartItem(cartKey, quantity);
        }
    });

    // ===== 5. ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤ =====
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏ô Header)
    fetchCart();

    const allWishlistButtons = document.querySelectorAll('.wishlist-btn');
    const favCountEl = document.getElementById('fav-count'); // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏ô Navbar

    // 1. üü¢ (‡πÉ‡∏´‡∏°‡πà) ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô "‡∏î‡∏∂‡∏á‡∏¢‡∏≠‡∏î" (‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö fetchCart)
    //    (‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API action=get_count)
    async function fetchFavoriteCount() {
        if (!favCountEl) return; // (‡∏ñ‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö ‡∏Å‡πá‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥)

        try {
            // 1.1 ‡∏¢‡∏¥‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà API (action=get_count)
            const response = await fetch('favorite_action.php?action=get_count');
            const data = await response.json();
            
            if (data.status === 'success') {
                // 1.2 ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏ô Navbar
                favCountEl.innerText = data.count;
            }
        } catch (error) {
            console.error('Error fetching favorite count:', error);
        }
    }

    // 2. üü¢ (‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î) ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Click Handler (‡∏õ‡∏∏‡πà‡∏° ‚ô°)
    allWishlistButtons.forEach(button => {
        button.addEventListener('click', async function() {
            
            const productId = this.dataset.productId;
            const formData = new FormData();
            formData.append('product_id', productId);
            // (‡πÄ‡∏£‡∏≤‡∏¢‡∏¥‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà action=toggle (default))

            try {
                // 2.1 ‡∏¢‡∏¥‡∏á API (action=toggle)
                const response = await fetch('favorite_action.php', {
                    method: 'POST',
                    body: formData
                });
                const data = await response.json();

                if (data.status === 'success') {
                    
                    // 3. üü¢ (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô) ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à -> ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô "‡∏î‡∏∂‡∏á‡∏¢‡∏≠‡∏î"
                    await fetchFavoriteCount(); // üëà ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
                    
                    // 4. (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏õ‡∏∏‡πà‡∏°
                    if (data.action === 'added') {
                        this.classList.add('active');
                        this.innerHTML = '‚ô•';
                    } else if (data.action === 'removed') {
                        this.classList.remove('active');
                        this.innerHTML = '‚ô°';
                        if (document.body.contains(document.querySelector('.favorite-page-title'))) {
                            this.closest('.product-card').style.display = 'none';
                        }
                    }
                    
                } else if (data.message === 'login_required') {
                    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ Login ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö Favorite ‡∏Ñ‡∏£‡∏±‡∏ö');
                } else {
                    alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + data.message);
                }

            } catch (error) {
                console.error('Error:', error);
                alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠');
            }
        });
    });

    // 5. üü¢ (‡πÉ‡∏´‡∏°‡πà) ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å "‡∏î‡∏∂‡∏á‡∏¢‡∏≠‡∏î" 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
    // (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡πÅ‡∏£‡∏Å)
    fetchFavoriteCount();
    
});
</script>

</body>
</html>